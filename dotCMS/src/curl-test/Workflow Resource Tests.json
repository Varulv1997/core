{
	"info": {
		"_postman_id": "13e4f5e2-4608-47fe-85e0-cfaed30c2a3a",
		"name": "Workflow Resource Tests",
		"description": "Test the necesary validations to every end point of the worlflow resource ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "findSchemas",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef767b78-d39d-4d87-b04b-0d87a587312b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Validate you can't get workflow data if you don't have credentials"
					},
					"response": []
				},
				{
					"name": "SuccessListOfSchemes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a90e77dd-c22d-45db-8b9f-e81dedbf3f46",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Includes system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});",
									"",
									"pm.test(\"Includes Document Management\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Document Management\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Validate you have the list of schemas "
					},
					"response": []
				}
			],
			"description": "Returns all schemes non-archived associated to a content type. 401 if the user does not have permission.\n\n@Path(\"/schemes\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "62396e27-3d2a-49dd-bd2b-aec256707a44",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "96798273-a8f9-4636-a2e9-e2819788f30d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "findAllSchemesAndSchemesByContentType",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08361c1c-4a5e-4ccf-9f98-f28d2f2590a2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/schemescontenttypes/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"schemescontenttypes",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Validate you can't get workflow data if you don't have credentials\n"
					},
					"response": []
				},
				{
					"name": "Validate read permissions to the content type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7cccf1d-6c30-4bb4-9157-b750e4d4eedd",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, Content types permissions\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/schemescontenttypes/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"schemescontenttypes",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Validate we return a 401 error in case you try to get shemes info of an unautorized conte type\n\nTo test: \nDelete permissions to the content type (generic) and add just permissions to admin "
					},
					"response": []
				},
				{
					"name": "Invalid cotnet type ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9c88a17-cdc7-4f01-a9b3-f46d5b61fddf",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, Content types not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"not found\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/schemescontenttypes/2a3e91e4-fbbf-4876-8c5b-2233c1739b0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"schemescontenttypes",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b0"
							]
						},
						"description": "Validate we return a 401 error in case you try to get shemes info of an unautorized conte type\n\nTo test: \nDelete permissions to the content type (generic) and add just permissions to admin "
					},
					"response": []
				},
				{
					"name": "SucessListOfSchemes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aea2bfc5-a129-46c3-b42d-38a2e81a21bf",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Includes system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});",
									"",
									"pm.test(\"Includes Document Management\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Document Management\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/schemescontenttypes/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"schemescontenttypes",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Validate you have the list of schemas "
					},
					"response": []
				}
			],
			"description": "Returns all schemes for the content type and include schemes non-archive . 401 if the user does not have permission\n\n@Path(\"/schemes/schemescontenttypes/{contentTypeId}\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ebdc5cef-09e7-4af9-900a-bc024d352418",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "15cb4dad-039b-4b0b-9fc2-5d28c99e0c83",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "findStepsByScheme",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "713ff46b-9b1a-4d03-bc14-707f7bf3bbd4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"steps"
							]
						},
						"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/schemes/{schemeId}/steps\")"
					},
					"response": []
				},
				{
					"name": "SuccessListOfSteps",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "625ffc5b-98cd-4bb0-9b8f-a30abb803be1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Includes default scheme\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"New\");",
									"});",
									"",
									"pm.test(\"Includes system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unpublished\");",
									"});",
									"",
									"pm.test(\"Includes Document Management\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Published\");",
									"});",
									"",
									"",
									"pm.test(\"Includes Document Management\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Archived\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"steps"
							]
						},
						"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/schemes/{schemeId}/steps\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4330a05a-d462-43c9-b162-f085bb6a31b8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Valid Response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/ad61a59e1-a49c-46f2-a929-db2b4bfa88b2/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"ad61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"steps"
							]
						},
						"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/schemes/{schemeId}/steps\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0fb81fa5-d1c0-4794-80a9-e8e62e8013d8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Includes default scheme\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"New\");",
									"});",
									"",
									"pm.test(\"Includes system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unpublished\");",
									"});",
									"",
									"pm.test(\"Includes Document Management\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Published\");",
									"});",
									"",
									"",
									"pm.test(\"Includes Document Management\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Archived\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a49c/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a49c",
								"steps"
							]
						},
						"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/schemes/{schemeId}/steps\")"
					},
					"response": []
				}
			],
			"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/schemes/{schemeId}/steps\")",
			"protocolProfileBehavior": {}
		},
		{
			"name": "findAvailableActions",
			"item": [
				{
					"name": "UserCredentialValidations",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e365c2b-9b73-4e12-b07e-1bcb23bf07e1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/47327d24-c894-4433-aa4b-0977f458e574/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"47327d24-c894-4433-aa4b-0977f458e574",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				},
				{
					"name": "Content type permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ccdabe5e-d6c5-47b6-99b2-679e2d06e47d",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var body = JSON.parse(responseBody);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/c9d74fae-7e9c-4283-b0de-335f8105e5a8/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"c9d74fae-7e9c-4283-b0de-335f8105e5a8",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				},
				{
					"name": "upload a temp file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c4ea977-6304-4b2b-946e-99e6cf2782ba",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"File name check\", function () {",
									"    pm.expect(jsonData.tempFiles[0].fileName).to.eql('250px-Bocas2.jpg');",
									"});",
									"pm.collectionVariables.set(\"temporalFileId\", jsonData.tempFiles[0].id);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Origin",
								"value": "{{serverURL}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"fileName\":\"250px-Bocas2.jpg\",\n\t\"remoteUrl\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b8/Bocas2.jpg/250px-Bocas2.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/temp/byUrl",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"temp",
								"byUrl"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Contentlet",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e8388a1d-0e59-414b-a247-5638256e133d",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code should be 200\", function () {",
									"",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"inode\", jsonData.entity.inode);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"contentlet\":\n    {\n        \"baseType\":\"dotAsset\",\n        \"asset\":\"{{temporalFileId}}\",\n        \"tags\":\"test\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							]
						},
						"description": "This create a dotAsset contentlet to be handle later"
					},
					"response": []
				},
				{
					"name": "Valid Inode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "36588537-9d4c-4c38-a08b-3fa3057843d7",
								"exec": [
									"pm.test(\"Status code is 404, Not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"was Not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/{{inode}}/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"{{inode}}",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				},
				{
					"name": "Success request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "976fb7b9-fe0b-4e3f-b70a-ead771ae251c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, Not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"was Not found\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/c9d74fae-7e9c-4283-b0de-335f8105e5a/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"c9d74fae-7e9c-4283-b0de-335f8105e5a",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fc9cdcd6-9fba-47a2-9511-229285d30fea",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, Not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"was Not found\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/c9d74fae-7e9c-4283-b0de-335f8105e5a/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"c9d74fae-7e9c-4283-b0de-335f8105e5a",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				}
			],
			"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "60657f8c-b86b-4e8c-90a0-e900a3182dea",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a2eb11c8-e191-4797-b551-c0c13930a5c6",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "findAction",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b7ddd6a-a580-4c51-9d72-f775ebc97944",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436"
							]
						},
						"description": "Returns a single action, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ValidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "af221535-611f-4398-9f75-2b82c09954da",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unable to find action using actionId\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c803",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c803"
							]
						},
						"description": "Returns a single action, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "962ad450-3176-4c59-a37c-570246bdbc83",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436"
							]
						},
						"description": "Returns a single action, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1cf94fd-872e-4f02-b256-0fc07c98330d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c803d",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c803d"
							]
						},
						"description": "Returns a single action, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "findActionByStep",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "890f4e40-36c7-4901-a690-cd28f9d19d2e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions/b9d89c80-3d88-4311-8365-187323c96436",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ValidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1dd474a-4d4c-4330-a50b-e3beaa2da0f2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The step does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"stepId=\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-17a/actions/b9d89c80-3d88-4311-8365-187323c96436",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-17a",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ValidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "77ed0215-2712-41f4-8ba3-edbff7c4ec97",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unable to find action using actionId\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions/b9d89c80-3da",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions",
								"b9d89c80-3da"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9765e85-1d0c-4937-90e4-559f0c50dacc",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions/b9d89c80-3d88-4311-8365-187323c96436",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdvalidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ebc4c211-8c3e-46d0-9eeb-63f92388927d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd17/actions/b9d89c803d",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd17",
								"actions",
								"b9d89c803d"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				}
			],
			"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "fd5160fe-9f24-4711-8a0a-f2bdb350d8d5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8b8e77df-6cd9-4824-a27a-81784ebaa0e7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "findActionsByStep (all the actions)",
			"item": [
				{
					"name": "userCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c9d5ad1b-5d7a-4ee9-930d-3198c313ef75",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "ValidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5890f020-0d7e-4cb7-930a-fdf76943bd17",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The step does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19a/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19a",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "WhoCanUseValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "51f72934-86a7-4b81-acb3-a303f9bf7f0a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Who can use validation\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Save / Publish\");",
									"});",
									"",
									"",
									"pm.test(\"Who can use validation\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Save\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "18325ba8-2efd-4fc4-b3f7-1bf6b9a6c870",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Who can use validation\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});",
									"",
									"",
									"pm.test(\"Who can use validation\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "34aaa946-f4e8-4694-af3d-bd272bcc1db6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Who can use validation\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});",
									"",
									"",
									"pm.test(\"Who can use validation\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd17/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd17",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				}
			],
			"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8d76a623-2b52-47b4-a2c7-b4a2e664df4d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "840f39e8-669b-4328-b6ed-c17b4b0486d0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "SaveAction",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3beb711-9843-402f-9b24-0c5d460c30d5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc879729-9fc0-440d-b24d-104f8f2b0832",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"FROM REST NEW\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0089406-b0eb-4fd6-b47b-936d80b8ffcb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e43d8c1-2ed9-4f1d-a623-92f4b1c36543",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"FROM REST NEW\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43835e02-1fc7-48ea-bc66-482b9ec724b4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"aaee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b0341aa-2c5d-4f73-9d7e-6c7b3dfc607a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"ad61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "SupportShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b940bfd-a3ef-43e3-8ed0-cd0d4769ac26",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"FROM REST NEW\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"dc3c9cd084\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1a4\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6bae7972-b30e-49bb-b34e-c181527e49a6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				}
			],
			"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n@Path(\"/actions\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "42613649-144e-458d-ba0f-1ce1055a2ccc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fd76e062-0037-4196-96f7-faa04f56af3d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "findActionByScheme",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "07e8ac34-66c4-4972-8217-877943aeb720",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "493f0bb8-4baa-4924-8225-3cf433507f23",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The scheme does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2a/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2a",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				},
				{
					"name": "WhoCanUseValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fed22635-468a-481f-87b5-93d24e613fff",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, Success request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"// Validate every return ",
									"",
									"pm.test(\"Valid response (Archive)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Archive\");",
									"});",
									"",
									"pm.test(\"Valid response (Copy)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Copy\");",
									"});",
									"",
									"pm.test(\"Valid response (Delete)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Delete\");",
									"});",
									"",
									"pm.test(\"Valid response (Publish)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Publish\");",
									"});",
									"",
									"pm.test(\"Valid response (Republish)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Republish\");",
									"});",
									"",
									"pm.test(\"Valid response (Save)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Save\");",
									"});",
									"",
									"pm.test(\"Valid response (Save / Publish)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Save / Publish\");",
									"});",
									"",
									"pm.test(\"Valid response (Unarchive)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Unarchive\");",
									"});",
									"",
									"pm.test(\"Valid response (Unpublish)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Unpublish\");",
									"});",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4054ce8c-ac45-490b-a19c-b15138a5a551",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, Success request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"// Validate every return ",
									"",
									"pm.test(\"Valid response (Archive)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Archive\");",
									"});",
									"",
									"pm.test(\"Valid response (Copy)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy\");",
									"});",
									"",
									"pm.test(\"Valid response (Delete)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Delete\");",
									"});",
									"",
									"pm.test(\"Valid response (Publish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Publish\");",
									"});",
									"",
									"pm.test(\"Valid response (Republish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Republish\");",
									"});",
									"",
									"pm.test(\"Valid response (Save)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save\");",
									"});",
									"",
									"pm.test(\"Valid response (Save / Publish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});",
									"",
									"pm.test(\"Valid response (Unarchive)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unarchive\");",
									"});",
									"",
									"pm.test(\"Valid response (Unpublish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unpublish\");",
									"});",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "727e2d2e-9616-4c80-807d-e550f5023f3d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, Success request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"// Validate every return ",
									"",
									"pm.test(\"Valid response (Archive)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Archive\");",
									"});",
									"",
									"pm.test(\"Valid response (Copy)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy\");",
									"});",
									"",
									"pm.test(\"Valid response (Delete)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Delete\");",
									"});",
									"",
									"pm.test(\"Valid response (Publish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Publish\");",
									"});",
									"",
									"pm.test(\"Valid response (Republish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Republish\");",
									"});",
									"",
									"pm.test(\"Valid response (Save)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save\");",
									"});",
									"",
									"pm.test(\"Valid response (Save / Publish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});",
									"",
									"pm.test(\"Valid response (Unarchive)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unarchive\");",
									"});",
									"",
									"pm.test(\"Valid response (Unpublish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unpublish\");",
									"});",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				}
			],
			"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2ceb7b3a-3484-49e0-baaa-63d33c6aeddf",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "78474d20-9b3c-421c-9147-f1d1a75479d3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "findStepById",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6847d10f-1f49-4b1c-ab4f-f255f49c0fbf",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/94178d17-96a0-4e08-b9aa-94214a7fb31e",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"94178d17-96a0-4e08-b9aa-94214a7fb31e"
							]
						},
						"description": "Get the step by id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3b2294dc-56b6-4759-af3a-b1261f899ee3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Published\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293"
							]
						},
						"description": "Get the step by id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "adf1919f-1434-41b2-98b9-221ac21953ca",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/adc3c9cd0-8467-404b-bf95-cb7df3fbc293",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"adc3c9cd0-8467-404b-bf95-cb7df3fbc293"
							]
						},
						"description": "Get the step by id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "SortlyValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6948ad25-d3fc-4452-af44-b94714198142",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Published\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-846740",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-846740"
							]
						},
						"description": "Get the step by id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "findAvailableDefaultActionsByContentType",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "875856ab-cb55-4a7d-b477-c67381ec11e2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {   ",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Returns all the possible default actions associated to the content type workflow schemes. 401 if the user does not have permission.\n\n@Path(\"/defaultactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7f78504-6eda-41a8-b040-37b583e45f4a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Returns all the possible default actions associated to the content type workflow schemes. 401 if the user does not have permission.\n\n@Path(\"/defaultactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidContentTypeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06931ef3-304d-44ab-8d1f-021788f64b3b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Content Type with id\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"not found\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/contenttype/a2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"contenttype",
								"a2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Returns all the possible default actions associated to the content type workflow schemes. 401 if the user does not have permission.\n\n@Path(\"/defaultactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				}
			],
			"description": "Returns all the possible default actions associated to the content type workflow schemes. 401 if the user does not have permission.\n\n@Path(\"/defaultactions/contenttype/{contentTypeId}\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "95b4d9d5-57dd-464d-94a9-df2c284c2c71",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2e05869d-5f77-429f-8f79-1e4b1c4a7863",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "findAvailableDefaultActionsBySchemes",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02c393ae-6282-47ac-8f00-a0e5dc9e755f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"schemes"
							]
						},
						"description": "Returns all the possible default actions associated to the workflow schemes.\n401 if the user does not have permission.\n\n@Path(\"/defaultactions/schemes\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ef8e893b-1335-4d9c-b1b1-ad9b91be050c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/schemes?ids=d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"schemes"
							],
							"query": [
								{
									"key": "ids",
									"value": "d61a59e1-a49c-46f2-a929-db2b4bfa88b2"
								}
							]
						},
						"description": "Returns all the possible default actions associated to the workflow schemes.\n401 if the user does not have permission.\n\n@Path(\"/defaultactions/schemes\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a90c7eb-ae36-44fd-a0da-2f051522b1c7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/schemes?ids=e61a59e1-a49c-46f2-a929-db2b4bfa88b2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"schemes"
							],
							"query": [
								{
									"key": "ids",
									"value": "e61a59e1-a49c-46f2-a929-db2b4bfa88b2"
								}
							]
						},
						"description": "Returns all the possible default actions associated to the workflow schemes.\n401 if the user does not have permission.\n\n@Path(\"/defaultactions/schemes\")"
					},
					"response": []
				},
				{
					"name": "ShortlySupport",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "92eaa3b5-9c83-4875-8ba9-4394d88c7dcc",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/schemes?ids=d61a59e1a4",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"schemes"
							],
							"query": [
								{
									"key": "ids",
									"value": "d61a59e1a4"
								}
							]
						},
						"description": "Returns all the possible default actions associated to the workflow schemes.\n401 if the user does not have permission.\n\n@Path(\"/defaultactions/schemes\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "findInitialAvailableActionsByContentType",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25715e75-d3e4-47da-8eaa-ec0f405dd46c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/initialactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"initialactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Finds the available actions of the initial/first step(s) of the workflow scheme(s) associated with a content type Id.\n\n@Path(\"/initialactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bcb492d1-989f-42c2-bc15-c59e8b96568a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/initialactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"initialactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Finds the available actions of the initial/first step(s) of the workflow scheme(s) associated with a content type Id.\n\n@Path(\"/initialactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5fab1d69-f726-4cb8-8b05-36ed4e994c08",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"System Workflow\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Save\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/initialactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"initialactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Finds the available actions of the initial/first step(s) of the workflow scheme(s) associated with a content type Id.\n\n@Path(\"/initialactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidContentTypeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf5c57cd-6f1e-4aab-896c-6d1306fb69e5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404 \", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Content Type with id:\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/initialactions/contenttype/a2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"initialactions",
								"contenttype",
								"a2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Finds the available actions of the initial/first step(s) of the workflow scheme(s) associated with a content type Id.\n\n@Path(\"/initialactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "UpdateAction",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac46c4cb-ba4e-4c30-937b-2a01952e888b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"Republish\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d-9c8e-40e4-bfcb-4ded",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d-9c8e-40e4-bfcb-4ded"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1614cdf6-e498-402e-a85d-d7fe327601c9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"Republish-test2\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d-9c8e-40e4-bfcb-4ded",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d-9c8e-40e4-bfcb-4ded"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "24f6eb8c-29ba-407d-9b39-c7a2e2af0a61",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Republish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"Republish\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d-9c8e-40e4-bfcb-4ded",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d-9c8e-40e4-bfcb-4ded"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5f1cb626-d475-4840-90da-639cee8f3861",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, Action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"action does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"Republish-test2\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/123",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"123"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ValidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3e584f20-c349-4a4f-a8e9-bcde443319df",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"actionName\": \"Republish-123fa\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88ba\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d-9c8e-40e4-bfcb-4ded40bd099f",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d-9c8e-40e4-bfcb-4ded40bd099f"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4559b25d-67be-4642-8cbe-69faddb74f64",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Republish\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"actionName\": \"Republish-123fa\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d9c",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d9c"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a32b9a7-0054-4c2b-9229-96b9731976bd",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d-9c8e-40e4-bfcb-4ded",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d-9c8e-40e4-bfcb-4ded"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				}
			],
			"description": "This resource updates the workflow action 404 if the id does not exist\n@Path(\"/actions/{actionId}\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "49fbe8bc-fe53-4aa5-bdf9-6761ce09f489",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "65b9f8b5-5246-47cf-bd80-8e34c636493f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "SaveActionToStep",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d6c459d6-3d8c-459d-8228-9f496bc5a3ef",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0d93329-1a45-4fda-92e8-f0e7fc549743",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1de60f95-bfa5-4988-8eb6-639781f549df",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e574b00b-9579-4f93-981e-92ea5838feb7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "faa2cda4-937c-4168-9fce-24702a8957e5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/adc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"adc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f99a72c-a21c-487d-852b-3a7ae47d68c1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The action does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"a777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f76d3903-7189-4931-9be5-eaba802f14d8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6bc8\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd084/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd084",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ce88751-bf7d-447f-bcea-cf14a7a99c3a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ImportScheme",
			"item": [
				{
					"name": "User Credentials Validations",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ed55a59-0da6-4c0e-a305-9469da1c5b8a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, Invalid Credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"workflowObject\": {\n            \"schemes\": [\n                {\n                    \n                    \"creationDate\": 1523640559394,\n                    \"name\": \"Test1\",\n                    \"description\": \"\",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1523640423771,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"01d5d41a-007e-463d-a5b5-c35ea27b1a30\",\n                    \"creationDate\": 1523643857447,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"creationDate\": 1523643857447,\n                    \"name\": \"step2\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"name\": \"Save it\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"LOCKED\",\n                        \"NEW\",\n                        \"UNLOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"687c0729-95fe-4e1d-b37c-e9f70615df23\",\n                    \"name\": \"TEst\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"LOCKED\",\n                        \"UNLOCKED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"01d5d41a-007e-463d-a5b5-c35ea27b1a30\",\n                    \"actionId\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"actionId\": \"687c0729-95fe-4e1d-b37c-e9f70615df23\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"2298b780-e1d3-4916-b981-e22fd5553086\",\n                    \"actionId\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"nextStep\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": []\n}\n    \n"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can't import schemes without credentials"
					},
					"response": []
				},
				{
					"name": "User Permissions Validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1abef38d-0f5c-499b-bb44-356a25890d09",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, The user don't have permissions to the workflow portlet\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"workflowObject\": {\n            \"schemes\": [\n                {\n                    \n                    \"creationDate\": 1523640559394,\n                    \"name\": \"Test2\",\n                    \"description\": \"\",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1523640423771,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"01d5d41a-007e-463d-a5b5-c35ea27b1a30\",\n                    \"creationDate\": 1523643857447,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"creationDate\": 1523643857447,\n                    \"name\": \"step2\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"name\": \"Save it\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"LOCKED\",\n                        \"NEW\",\n                        \"UNLOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"687c0729-95fe-4e1d-b37c-e9f70615df23\",\n                    \"name\": \"TEst\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"LOCKED\",\n                        \"UNLOCKED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"01d5d41a-007e-463d-a5b5-c35ea27b1a30\",\n                    \"actionId\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"actionId\": \"687c0729-95fe-4e1d-b37c-e9f70615df23\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"2298b780-e1d3-4916-b981-e22fd5553086\",\n                    \"actionId\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"nextStep\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": []\n}\n    \n"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can't import if the user don't have access to the workflow portlet "
					},
					"response": []
				},
				{
					"name": "SucessImportAsAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95a4b225-fe0e-4b67-bf48-6bc751007cbb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, The user don't have permissions to the workflow portlet\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"workflowObject\": {\n            \"version\": \"1.0\",\n            \"schemes\": [\n                {\n                    \"id\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"creationDate\": 1527632337579,\n                    \"name\": \"WF_Import_AsAdmin\",\n                    \"description\": \"REST_1\",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1527632329252,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"4ec41c51-4006-4713-a28d-d42a719934ac\",\n                    \"creationDate\": 1527632495697,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"creationDate\": 1527632495698,\n                    \"name\": \"Step2\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"creationDate\": 1527632495699,\n                    \"name\": \"Step3\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 2,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"creationDate\": 1527632495700,\n                    \"name\": \"Step4\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 3,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"1e916358-b9bf-4331-b28b-7af41eefc970\",\n                    \"name\": \"Archive\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"e93c8802-2033-4c3b-88f9-8125301d9816\",\n                    \"name\": \"Publish\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"b588eae6-fa32-4eeb-b30e-fa9f7a80da7f\",\n                    \"name\": \"Save\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"334a0f26-76b9-4be7-803b-ab6dc5461023\",\n                    \"name\": \"Un-Archive\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"ARCHIVED\"\n                    ]\n                },\n                {\n                    \"id\": \"0e807408-701d-4e02-b7a0-8279f3668fdd\",\n                    \"name\": \"Unpublish\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"PUBLISHED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"4ec41c51-4006-4713-a28d-d42a719934ac\",\n                    \"actionId\": \"b588eae6-fa32-4eeb-b30e-fa9f7a80da7f\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"actionId\": \"1e916358-b9bf-4331-b28b-7af41eefc970\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"actionId\": \"e93c8802-2033-4c3b-88f9-8125301d9816\",\n                    \"actionOrder\": \"1\"\n                },\n                {\n                    \"stepId\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"actionId\": \"0e807408-701d-4e02-b7a0-8279f3668fdd\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"actionId\": \"334a0f26-76b9-4be7-803b-ab6dc5461023\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"889a58e3-2c22-4164-b3c1-62fbf93b5949\",\n                    \"actionId\": \"1e916358-b9bf-4331-b28b-7af41eefc970\",\n                    \"name\": \"Archive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Archive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will archive the content.\",\n                        \"localizedName\": \"Archive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"51610a9a-9be6-489b-ba75-336bf632fc13\",\n                    \"actionId\": \"e93c8802-2033-4c3b-88f9-8125301d9816\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"f52163e8-c4a1-4862-be40-0c530cd8f154\",\n                    \"actionId\": \"b588eae6-fa32-4eeb-b30e-fa9f7a80da7f\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"789b3b43-0b19-40df-b5e0-e7e161dd1f39\",\n                    \"actionId\": \"334a0f26-76b9-4be7-803b-ab6dc5461023\",\n                    \"name\": \"Unarchive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Unarchive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will un archive the content and return it to a working state\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Unarchive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"700330ab-8974-40d5-9131-67aa05731b48\",\n                    \"actionId\": \"0e807408-701d-4e02-b7a0-8279f3668fdd\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": []\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can import schemes as admin\n"
					},
					"response": []
				},
				{
					"name": "Sucess Import As Limited",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b682a02-cbce-4638-9768-31f13a23fe15",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, The user don't have permissions to the workflow portlet\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"workflowObject\": {\n            \"version\": \"1.0\",\n            \"schemes\": [\n                {\n                    \"id\": \"9f0a6167-967f-436a-89ec-369f3ed7d7b7\",\n                    \"creationDate\": 1527689644031,\n                    \"name\": \"WF_Import_AsLimited\",\n                    \"description\": \"REST_1\",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1527689541676,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"bca05cbc-9e6f-42b4-a836-8ab739993811\",\n                    \"creationDate\": 1527689722717,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"9f0a6167-967f-436a-89ec-369f3ed7d7b7\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"dc5b1e3f-d2a4-498a-a344-5f707163080e\",\n                    \"creationDate\": 1527689722717,\n                    \"name\": \"Step2\",\n                    \"schemeId\": \"9f0a6167-967f-436a-89ec-369f3ed7d7b7\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"c3c7c580-750b-4e05-91b5-296d0d7085ab\",\n                    \"creationDate\": 1527689722718,\n                    \"name\": \"Step3\",\n                    \"schemeId\": \"9f0a6167-967f-436a-89ec-369f3ed7d7b7\",\n                    \"myOrder\": 2,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"7fbf565d-27be-4060-b21e-a97446b2da9e\",\n                    \"creationDate\": 1527689722719,\n                    \"name\": \"Step4\",\n                    \"schemeId\": \"9f0a6167-967f-436a-89ec-369f3ed7d7b7\",\n                    \"myOrder\": 3,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"f572dfbc-1c15-4768-b9ef-f52cb8b673bf\",\n                    \"name\": \"Archive\",\n                    \"schemeId\": \"9f0a6167-967f-436a-89ec-369f3ed7d7b7\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"1f1a651f-db5b-43dc-8ffd-19dd4ff4df63\",\n                    \"name\": \"Publish\",\n                    \"schemeId\": \"9f0a6167-967f-436a-89ec-369f3ed7d7b7\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"338b2daa-4ca3-46ae-89fe-4074158128c6\",\n                    \"name\": \"Save\",\n                    \"schemeId\": \"9f0a6167-967f-436a-89ec-369f3ed7d7b7\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"fcee32e0-cbdc-4d94-a1cf-bbfd103ba539\",\n                    \"name\": \"Un-Archive\",\n                    \"schemeId\": \"9f0a6167-967f-436a-89ec-369f3ed7d7b7\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"ARCHIVED\"\n                    ]\n                },\n                {\n                    \"id\": \"475f1801-9ce0-4792-8b72-f577307a72d5\",\n                    \"name\": \"Unpublish\",\n                    \"schemeId\": \"9f0a6167-967f-436a-89ec-369f3ed7d7b7\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"PUBLISHED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"bca05cbc-9e6f-42b4-a836-8ab739993811\",\n                    \"actionId\": \"338b2daa-4ca3-46ae-89fe-4074158128c6\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"dc5b1e3f-d2a4-498a-a344-5f707163080e\",\n                    \"actionId\": \"f572dfbc-1c15-4768-b9ef-f52cb8b673bf\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"dc5b1e3f-d2a4-498a-a344-5f707163080e\",\n                    \"actionId\": \"1f1a651f-db5b-43dc-8ffd-19dd4ff4df63\",\n                    \"actionOrder\": \"1\"\n                },\n                {\n                    \"stepId\": \"c3c7c580-750b-4e05-91b5-296d0d7085ab\",\n                    \"actionId\": \"475f1801-9ce0-4792-8b72-f577307a72d5\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"7fbf565d-27be-4060-b21e-a97446b2da9e\",\n                    \"actionId\": \"fcee32e0-cbdc-4d94-a1cf-bbfd103ba539\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"d02cf076-2bf2-491d-a500-2bc24221843f\",\n                    \"actionId\": \"f572dfbc-1c15-4768-b9ef-f52cb8b673bf\",\n                    \"name\": \"Archive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Archive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will archive the content.\",\n                        \"localizedName\": \"Archive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"285c1376-a094-4742-9d7d-af4b8800a9d7\",\n                    \"actionId\": \"1f1a651f-db5b-43dc-8ffd-19dd4ff4df63\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"a9997b89-09dc-466c-9d62-2aa050f7eb9e\",\n                    \"actionId\": \"338b2daa-4ca3-46ae-89fe-4074158128c6\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"0b87df46-7760-4f70-a0af-c4e71759be2e\",\n                    \"actionId\": \"fcee32e0-cbdc-4d94-a1cf-bbfd103ba539\",\n                    \"name\": \"Unarchive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Unarchive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will un archive the content and return it to a working state\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Unarchive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"d679517c-745f-4bda-965e-a8dc868ebcf4\",\n                    \"actionId\": \"475f1801-9ce0-4792-8b72-f577307a72d5\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": []\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can import schemes as limited user if you have permissions to the workflow portlet "
					},
					"response": []
				},
				{
					"name": "Schemes with the same name validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "024aca1b-da25-415e-aa05-f4452cc35561",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, Already exist schemes with the same name\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Correct response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"workflowObject\": {\n            \"version\": \"1.0\",\n            \"schemes\": [\n                {\n                    \"id\": \"6d3a3ba8-2d7f-4671-960a-41de1603cb13\",\n                    \"creationDate\": 1527690015552,\n                    \"name\": \"WF_Import_AsAdmin\",\n                    \"description\": \"REST_1\",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1527689987834,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"60cb7027-12d5-417c-90f9-c11eb18d1de6\",\n                    \"creationDate\": 1527690059907,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"6d3a3ba8-2d7f-4671-960a-41de1603cb13\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"6517bb86-4f03-40d5-aa13-83b28a568c43\",\n                    \"creationDate\": 1527690059908,\n                    \"name\": \"Step2\",\n                    \"schemeId\": \"6d3a3ba8-2d7f-4671-960a-41de1603cb13\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"2263ab85-f6c5-4958-a1d6-9ca4d99d1ad3\",\n                    \"creationDate\": 1527690059909,\n                    \"name\": \"Step3\",\n                    \"schemeId\": \"6d3a3ba8-2d7f-4671-960a-41de1603cb13\",\n                    \"myOrder\": 2,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"731e7ee6-b0fe-49ce-9843-dc6709512f45\",\n                    \"creationDate\": 1527690059909,\n                    \"name\": \"Step4\",\n                    \"schemeId\": \"6d3a3ba8-2d7f-4671-960a-41de1603cb13\",\n                    \"myOrder\": 3,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"851b2ba9-4734-4733-97e4-f83e3631b6e0\",\n                    \"name\": \"Archive\",\n                    \"schemeId\": \"6d3a3ba8-2d7f-4671-960a-41de1603cb13\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"1f830279-cdf2-45f2-b947-439f979d4a1b\",\n                    \"name\": \"Publish\",\n                    \"schemeId\": \"6d3a3ba8-2d7f-4671-960a-41de1603cb13\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"19262eb9-73ab-446f-ac0d-279102443ff3\",\n                    \"name\": \"Save\",\n                    \"schemeId\": \"6d3a3ba8-2d7f-4671-960a-41de1603cb13\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"c0ab1517-2d52-4f10-bafb-9559d1b90e26\",\n                    \"name\": \"Un-Archive\",\n                    \"schemeId\": \"6d3a3ba8-2d7f-4671-960a-41de1603cb13\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"ARCHIVED\"\n                    ]\n                },\n                {\n                    \"id\": \"4aa0a2ee-5331-4a85-a419-ed5baaa51d69\",\n                    \"name\": \"Unpublish\",\n                    \"schemeId\": \"6d3a3ba8-2d7f-4671-960a-41de1603cb13\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"PUBLISHED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"60cb7027-12d5-417c-90f9-c11eb18d1de6\",\n                    \"actionId\": \"19262eb9-73ab-446f-ac0d-279102443ff3\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"6517bb86-4f03-40d5-aa13-83b28a568c43\",\n                    \"actionId\": \"851b2ba9-4734-4733-97e4-f83e3631b6e0\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"6517bb86-4f03-40d5-aa13-83b28a568c43\",\n                    \"actionId\": \"1f830279-cdf2-45f2-b947-439f979d4a1b\",\n                    \"actionOrder\": \"1\"\n                },\n                {\n                    \"stepId\": \"2263ab85-f6c5-4958-a1d6-9ca4d99d1ad3\",\n                    \"actionId\": \"4aa0a2ee-5331-4a85-a419-ed5baaa51d69\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"731e7ee6-b0fe-49ce-9843-dc6709512f45\",\n                    \"actionId\": \"c0ab1517-2d52-4f10-bafb-9559d1b90e26\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"06a81705-6e66-4714-92c5-8f6f2af6564f\",\n                    \"actionId\": \"851b2ba9-4734-4733-97e4-f83e3631b6e0\",\n                    \"name\": \"Archive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Archive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will archive the content.\",\n                        \"localizedName\": \"Archive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"bcc25153-a099-42bc-929d-99dd43c165c1\",\n                    \"actionId\": \"1f830279-cdf2-45f2-b947-439f979d4a1b\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"c66d006c-bb80-4cc4-bb9e-3a8fed721b6a\",\n                    \"actionId\": \"19262eb9-73ab-446f-ac0d-279102443ff3\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"e355d332-d1e4-4849-9240-4791b315f692\",\n                    \"actionId\": \"c0ab1517-2d52-4f10-bafb-9559d1b90e26\",\n                    \"name\": \"Unarchive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Unarchive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will un archive the content and return it to a working state\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Unarchive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"88c86fbd-0662-4429-bafc-1ca91e5c61cb\",\n                    \"actionId\": \"4aa0a2ee-5331-4a85-a419-ed5baaa51d69\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": []\n    }\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can import schemes as admin\n"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "de78ba63-462c-4d4a-add7-bf83aca6ca3d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can import schemes as limited user if you have permissions to the workflow portlet "
					},
					"response": []
				},
				{
					"name": "Unable to UpdateSchemeViaImport",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b2dea7e-6cbe-4e9c-9525-f5c0b9787819",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400, Scheme has been updated\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Already exist a scheme with the same id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"workflowObject\": {\n            \"version\": \"1.0\",\n            \"schemes\": [\n                {\n                    \"id\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"creationDate\": 1527632337579,\n                    \"name\": \"WF_Import_AsAdmin_updated\",\n                    \"description\": \"REST_1_updated\",\n                    \"archived\": true,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1527632329252,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"4ec41c51-4006-4713-a28d-d42a719934ac\",\n                    \"creationDate\": 1527632495697,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"creationDate\": 1527632495698,\n                    \"name\": \"Step2\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"creationDate\": 1527632495699,\n                    \"name\": \"Step3\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 2,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"creationDate\": 1527632495700,\n                    \"name\": \"Step4\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 3,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"1e916358-b9bf-4331-b28b-7af41eefc970\",\n                    \"name\": \"Archive\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"e93c8802-2033-4c3b-88f9-8125301d9816\",\n                    \"name\": \"Publish\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"b588eae6-fa32-4eeb-b30e-fa9f7a80da7f\",\n                    \"name\": \"Save\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"334a0f26-76b9-4be7-803b-ab6dc5461023\",\n                    \"name\": \"Un-Archive\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"ARCHIVED\"\n                    ]\n                },\n                {\n                    \"id\": \"0e807408-701d-4e02-b7a0-8279f3668fdd\",\n                    \"name\": \"Unpublish\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"PUBLISHED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"4ec41c51-4006-4713-a28d-d42a719934ac\",\n                    \"actionId\": \"b588eae6-fa32-4eeb-b30e-fa9f7a80da7f\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"actionId\": \"1e916358-b9bf-4331-b28b-7af41eefc970\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"actionId\": \"e93c8802-2033-4c3b-88f9-8125301d9816\",\n                    \"actionOrder\": \"1\"\n                },\n                {\n                    \"stepId\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"actionId\": \"0e807408-701d-4e02-b7a0-8279f3668fdd\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"actionId\": \"334a0f26-76b9-4be7-803b-ab6dc5461023\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"889a58e3-2c22-4164-b3c1-62fbf93b5949\",\n                    \"actionId\": \"1e916358-b9bf-4331-b28b-7af41eefc970\",\n                    \"name\": \"Archive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Archive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will archive the content.\",\n                        \"localizedName\": \"Archive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"51610a9a-9be6-489b-ba75-336bf632fc13\",\n                    \"actionId\": \"e93c8802-2033-4c3b-88f9-8125301d9816\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"f52163e8-c4a1-4862-be40-0c530cd8f154\",\n                    \"actionId\": \"b588eae6-fa32-4eeb-b30e-fa9f7a80da7f\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"789b3b43-0b19-40df-b5e0-e7e161dd1f39\",\n                    \"actionId\": \"334a0f26-76b9-4be7-803b-ab6dc5461023\",\n                    \"name\": \"Unarchive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Unarchive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will un archive the content and return it to a working state\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Unarchive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"700330ab-8974-40d5-9131-67aa05731b48\",\n                    \"actionId\": \"0e807408-701d-4e02-b7a0-8279f3668fdd\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": []\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can import schemes as admin\n"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DeleteStep",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2eeecdc3-3db5-4040-95b9-f53291ce4f49",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/c6035d07-8e8f-4a71-ad93-93adabf13906",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"c6035d07-8e8f-4a71-ad93-93adabf13906"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "SuccessDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "82a6918e-c2f5-45de-ac08-88c8a5a7c88a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Step1\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"4ec41c51-4006-4713-a28d-d42a719934ac\");",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/4ec41c51-4006-4713-a28d-d42a719934ac",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"4ec41c51-4006-4713-a28d-d42a719934ac"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "PortletActionValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb2ee198-2980-4edf-9e8f-07e38f4b488d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/ee24a4cb-2d15-4c98-b1bd-6327126451f3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"ee24a4cb-2d15-4c98-b1bd-6327126451f3"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "ReferencedStepValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d1f71e4-db16-4f2b-8d77-4b748b2feb55",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is being referenced by\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/ee24a4cb-2d15-4c98-b1bd-6327126451f3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"ee24a4cb-2d15-4c98-b1bd-6327126451f3"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "ValidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d5ecce9-162e-4885-8cf5-049e321f6f12",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/zee24a4cb-2d15-4c98-b1bd-6327126451f3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"zee24a4cb-2d15-4c98-b1bd-6327126451f3"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2b89780d-141a-4ac6-8ee9-e61c39068dd8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Editing\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/c965f6a50a",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"c965f6a50a"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DeleteAction (Permanently)",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "df3014be-cb87-4c2c-9553-1dd2943fca63",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/9012b349-e8ce-446f-86df-50b4f82a82ff",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"9012b349-e8ce-446f-86df-50b4f82a82ff"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				},
				{
					"name": "SeccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "999ba18d-cbb3-41b3-b913-55330f26f0b9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/62078964-3ed4-4729-91d3-75e841736905",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"62078964-3ed4-4729-91d3-75e841736905"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e7cac3cb-edcb-4e6f-bd46-c7badcf51f39",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4e1efa41-789e-4f63-8e7f-30f5697e53e3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4e1efa41-789e-4f63-8e7f-30f5697e53e3"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "41f319d8-76e7-4e0c-9eea-a02e4bceb027",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4e1efa41-789e-4f63-8e7f-30f5697e53e3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4e1efa41-789e-4f63-8e7f-30f5697e53e3"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8825e371-f9d8-4b7a-8da2-dfe5d0c01539",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The action does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/a4e1efa41-789e-4f63-8e7f-30f5697e53e3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"a4e1efa41-789e-4f63-8e7f-30f5697e53e3"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43376424-12f8-415a-b6af-4f5c8c91894d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/f2bb86bcf5",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"f2bb86bcf5"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DeleteAction (from step)",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e900ef53-0001-46bd-8f6a-425183abb894",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/0c5018fc-4773-4524-9ba8-328ca4c3d0b2/actions/658278d3-aa3b-4ce4-a028-c9e1656e4f9e",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"0c5018fc-4773-4524-9ba8-328ca4c3d0b2",
								"actions",
								"658278d3-aa3b-4ce4-a028-c9e1656e4f9e"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SuceessDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15423c4b-68ee-4259-b361-6df8633991d2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2/actions/777f1c6b-c877-4a37-ba4b-10627316c2cc",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
								"actions",
								"777f1c6b-c877-4a37-ba4b-10627316c2cc"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "08356ea9-c9f9-4420-8011-52dc2e9a621c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2/actions/777f1c6b-c877-4a37-ba4b-10627316c2cc",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
								"actions",
								"777f1c6b-c877-4a37-ba4b-10627316c2cc"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b191ed3b-1ef4-4f37-b41c-b7be461e8cb2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2/actions/c92f9aa1-9503-4567-ac30-d3242b54d02d",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
								"actions",
								"c92f9aa1-9503-4567-ac30-d3242b54d02d"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bca808c3-bfa2-491a-94fc-afa47866831b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/ad6b095b6-b65f-4bdb-bbfd-701d663dfee2/actions/c92f9aa1-9503-4567-ac30-d3242b54d02d",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"ad6b095b6-b65f-4bdb-bbfd-701d663dfee2",
								"actions",
								"c92f9aa1-9503-4567-ac30-d3242b54d02d"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7727a052-50ca-4109-b0fb-fc3d05452e0f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The action does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2/actions/ac92f9aa1-9503-4567-ac30-d3242b54d02d",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
								"actions",
								"ac92f9aa1-9503-4567-ac30-d3242b54d02d"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2181e796-7a5d-4801-8786-93a064c6dfa1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd084/actions/ceca71a0de",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd084",
								"actions",
								"ceca71a0de"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ReorderStep",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3d0943b5-7cac-406d-81d7-aec93e8b4bbb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/94178d17-96a0-4e08-b9aa-94214a7fb31e/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"94178d17-96a0-4e08-b9aa-94214a7fb31e",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				},
				{
					"name": "SuccessReorder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a93a94d5-0650-4a50-987a-084723bb1511",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06bc52f1-5190-4c37-97bc-60f34615ee54",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21dac589-48df-4cc1-8e1c-48a6acd5b6ae",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0c6e1338-ccb3-4f49-95b9-044ff79d2e5b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/adc3c9cd0-8467-404b-bf95-cb7df3fbc293/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"adc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				},
				{
					"name": "SupportShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "21f614d1-5951-45b6-960c-2a8af01a92cd",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/dc3c9cd084/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"dc3c9cd084",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "UpdateStep",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c6366c5d-92ca-4d80-97df-bf33766ce6cb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/94178d17-96a0-4e08-b9aa-94214a7fb31e",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"94178d17-96a0-4e08-b9aa-94214a7fb31e"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b59a152-d26e-4c9c-8e85-a3ddd0f1da17",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"stepOrder\":5, \"stepName\":\"REST\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ceae72c1-2e64-4bb4-ba33-8bcb7a10bfb7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"stepOrder\":5, \"stepName\":\"REST\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ed42798-74b8-48e1-98df-182c0eaef7b1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"stepOrder\":5, \"stepName\":\"REST\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "252dcb5c-7f22-47da-9c5b-d9d95f4a6daa",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"stepOrder\":5, \"stepName\":\"REST\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/ad6b095b6-b65f-4bdb-bbfd-701d663dfee2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"ad6b095b6-b65f-4bdb-bbfd-701d663dfee2"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc9d430f-a03a-4406-b313-7d4d9c41e873",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"stepOrder\":5, \"stepName\":\"REST\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6b6",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6b6"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1734c66a-b95e-4970-85db-a2273d33b34c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "AddStep",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "44b5231b-ba26-43f9-aca8-2aa933965d8f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "20e86be7-ec03-4901-8522-fbddf0b3ccf5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9d8c98f2-c8ec-45ed-a775-d4132c86d8a1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "949d3455-cfa0-4255-b695-fb143aabb5c1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1577d74f-c195-401c-8e13-fe3bcb6b602a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"ad61a59e1-a49c-46f2-a929-db2b4bfa88b2\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0c6cd6e-2ea0-4c5f-a16e-928be84cbed0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"d61a59e1a49\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9c4e735c-9dd4-4345-aa29-3362440d8270",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "SaveScheme",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "996cdebd-2f29-4e52-ac9d-19177c93babc",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST1\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "12ecccb0-ee5c-4c5e-8391-7815e5560483",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST1\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "MultipleSchemesWithTheSameName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3b320d5-7caa-4e07-a07c-789fe9d7bda6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, Scheme already exist\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST1\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a190ca22-da98-4b27-a980-4bc8fdae7532",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST1\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "325ed57c-3d7e-49b5-975f-e43e41b40e6c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"SaveScheme\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"SaveScheme\", \"schemeDescription\": \"LimitedUser\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b95ee66-3da3-412b-852d-03674b6adcb4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "UpdateScheme",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54687189-eda5-47a5-b421-789242976491",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST2\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/211040db-5d79-4e3c-807a-1f2dec2ff16b",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"211040db-5d79-4e3c-807a-1f2dec2ff16b"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ddcdbaa-5e9c-440b-96a6-90490d6172af",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"WF_Import_AsAdmin_edited\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"WF_Import_AsAdmin_edited\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/42771904-b7d9-42b7-b038-8e077fabcf3f",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"42771904-b7d9-42b7-b038-8e077fabcf3f"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e864ac7-4b45-452e-997d-a1363c826bdb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"Default Scheme Updated from REST\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/42771904-b7d9-42b7-b038-8e077fabcf3f",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"42771904-b7d9-42b7-b038-8e077fabcf3f"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5b3a2101-537e-42b2-8bb2-45a34a553e10",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"WF_Import_AsAdmin_edited_limited\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"WF_Import_AsAdmin_edited_limited\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/42771904-b7d9-42b7-b038-8e077fabcf3f",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"42771904-b7d9-42b7-b038-8e077fabcf3f"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "67beeaf8-91ed-4f89-bf2d-eae05319f864",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404 \", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"Default Scheme Updated from REST\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/a85c1515c-c4f3-463c-bac2-860b8fcacc34",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"a85c1515c-c4f3-463c-bac2-860b8fcacc34"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58e953a1-48a4-47f7-aa99-7431a75e2371",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"WF_Import_AsAdmin_edited_Shortly\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"WF_Import_AsAdmin_edited_Shortly\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"true\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/42771904b7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"42771904b7"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bbf94e16-2864-416e-b7ce-0df8c78dd033",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/85c1515c-c4f3-463c-bac2-860b8fcacc34",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"85c1515c-c4f3-463c-bac2-860b8fcacc34"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CopyScheme",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1217ef53-da52-4cd4-acd2-d7ff764c70cb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/copy",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"copy"
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "SuccessCopy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b7ebe3c0-0ce0-4ca5-9313-215d405fc56d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy from REST (automatic)\");",
									"});",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"creationDate\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/copy?name=Copy from REST (automatic)",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy from REST (automatic)"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "73492405-9efb-46f3-855b-0e1a67b39ee3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/copy?name=Copy from REST (automatic)",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy from REST (automatic)"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "939fbf3c-11ab-4534-9877-e9670943d356",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"_limited\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"creationDate\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/copy?name=Copy from REST (automatic)_limited",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy from REST (automatic)_limited"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64c089fe-09b6-4542-b18e-58c9589a8f10",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/ad61a59e1-a49c-46f2-a929-db2b4bfa88b2/copy?name=Copy from REST (automatic)_limited",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"ad61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy from REST (automatic)_limited"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "CopyWithAlreadyExistingName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c13967f-24d9-4fc4-8abf-6c2b96e4baa9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy from REST (automatic)_limited\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/copy?name=Copy from REST (automatic)_limited",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy from REST (automatic)_limited"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "CopyWithotNameParam",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "315699f8-b40c-4f96-8846-40ab3ccd89de",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy from REST (automatic)_limited\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\":\"Copy from REST (automatic)_limited\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/copy",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"copy"
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "987d05df-a7ec-436b-96f5-1ebc7e88bfab",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy Using ShortlyID\");",
									"});",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"creationDate\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\":\"Copy from REST (automatic)_limited\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a49/copy?name=Copy Using ShortlyID",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a49",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy Using ShortlyID"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "FireAction",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3aa6d9fe-e056-4a99-8d29-3e77971ac194",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"678d00bf-10b0-4080-99b4-9517ab9ea580\",\n  \"languageId\" : 1,\n  \"name\": \"postman1\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/936f14eef2/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"936f14eef2",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7500129d-30d3-4f99-a37d-b6621facc8d9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"postman\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\",\n  \"value\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "ContentTypePermissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "842ea6d2-366e-4e40-b694-48884e2a75f5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"permissions\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\",\n  \"value\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e10829b-97eb-4488-899f-42f3f52197d4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The action does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\",\n  \"value\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/ab9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"ab9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "InvalidContentTypeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "45b78106-9fec-40d7-bb5f-a3cd5e2642f0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Content Type with id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"af4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\",\n  \"value\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "SupportShorlty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7027ee8e-0945-4ca2-a2de-73d2c0631a3b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"postman5\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman5\",\n  \"value\": \"postman5\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d8843/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d8843",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "FireActionWithoutBody",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aaa99196-1509-48bb-9562-0dc9b9e520a5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"About Quest\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d8843/fire?inode=e79ab40f-0728-4995-ab3f-ee9f87340cad",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d8843",
								"fire"
							],
							"query": [
								{
									"key": "inode",
									"value": "e79ab40f-0728-4995-ab3f-ee9f87340cad"
								}
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "FormValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e29d4291-31b5-4ba6-8099-5a502c2f27b7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400, BadRequest\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"unique\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f0ec52d-7964-4c71-88a7-775a92f966c3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ReorderAction",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bf2a31d3-b111-452b-87de-d5162b3aec63",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 3}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/94178d17-96a0-4e08-b9aa-94214a7fb31e/actions/7075981c-eda2-4896-a65c-71749ee2877e",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"94178d17-96a0-4e08-b9aa-94214a7fb31e",
								"actions",
								"7075981c-eda2-4896-a65c-71749ee2877e"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eadb13b3-3822-4163-bd66-8a4b31531458",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 0}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88813f5a-5a48-4bc8-8c07-46e0c0638b53",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 0}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidOrderValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3f464de0-e823-42ea-89b6-4fe2cdf8492d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400, Bad request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Numeric value\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 123012301203102301230102301230123}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1b36c7b3-2e13-4956-b7bc-3f8c3d75c0c9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 1}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/a1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"a1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b0c87420-e5cb-4305-b7fe-925d3cd545d2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The action does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 1}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/a64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"a64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9200eb6-adfc-43ab-a0d7-2e3344d40332",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 1}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a80750/actions/64fa7b51bf",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a80750",
								"actions",
								"64fa7b51bf"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2becca15-38bc-44a7-be85-76f6c4c944c4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "ExportScheme",
			"item": [
				{
					"name": "User Credentials Validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "145bc8f5-b687-436f-ab11-5b6b7fd947c8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, Invalid credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Correct response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/export",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"export"
							]
						},
						"description": "Validate you can't export without credentials"
					},
					"response": []
				},
				{
					"name": "User Permissions Validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d3946e61-ebae-46d1-9732-6a41a7f5cbfa",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403 because the user don't have permissions to the workflow portlet\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/export",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"export"
							]
						},
						"description": "Validate you can't export schemes with an unautorized user "
					},
					"response": []
				},
				{
					"name": "Sucess Export As Limited",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f46b7dc8-e8dd-4dd2-9f05-09d79c8dbbb8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Validate returs the system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/export",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"export"
							]
						},
						"description": "Validate you can export schemes as limeted user with access to the workflow portlet \n"
					},
					"response": []
				},
				{
					"name": "Sucess Export As Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "578272c7-f20e-4e99-8f87-8f737a2ca40f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate returs the system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/export",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"export"
							]
						},
						"description": "Validate you can export schemes as admin user"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f4e08ca-0a16-49af-a1be-bdcb00c9436c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate returs the system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/export",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"export"
							]
						},
						"description": "Validate you can export schemes as admin user"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DeleteScheme",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "30014474-69e1-4992-b3f3-2b25907d9ad0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/85c1515c-c4f3-463c-bac2-860b8fcacc34",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"85c1515c-c4f3-463c-bac2-860b8fcacc34"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec0e07a3-5f2b-4c93-bdc3-cc5c47ee2c65",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/42771904-b7d9-42b7-b038-8e077fabcf3f",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"42771904-b7d9-42b7-b038-8e077fabcf3f"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d1f8fd72-f9f2-4416-a804-6f0734c422f6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/42771904-b7d9-42b7-b038-8e077fabcf3f",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"42771904-b7d9-42b7-b038-8e077fabcf3f"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "ValidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a6d5facb-1407-42f0-8b25-2af9203eb4d4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/a60d40a6b-a677-45d6-8f5b-e16431b1eb1c",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"a60d40a6b-a677-45d6-8f5b-e16431b1eb1c"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShorlty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "02e39a28-111b-403f-a65c-d776451d043b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid attempt to delete the system workflow\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				}
			],
			"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6c0d1a50-9289-4d83-b7f1-2b0a5e8772be",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "77f1aba8-d387-4d02-823f-4d199a77ca16",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "systemActions",
			"item": [
				{
					"name": "Creates a Content Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "588f4e33-74f1-4622-8dce-b84e6ae6200c",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"defaultType\":false,\n   \"fixed\":false,\n   \"system\":false,\n   \"clazz\":\"com.dotcms.contenttype.model.type.ImmutableSimpleContentType\",\n   \"description\":\"\",\n   \"host\":\"48190c8c-42c4-46af-8d1a-0cd5db894797\",\n   \"folder\":\"SYSTEM_FOLDER\",\n   \"name\":\"TestContentTypeSystemActions\",\n   \"systemActionMappings\":{\n      \"NEW\":\"ceca71a0-deee-4999-bd47-b01baa1bcfc8\"\n   },\n   \"workflow\":[\n      \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\"\n   ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/contenttype/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"contenttype",
								""
							]
						},
						"description": "Creates a content type to associate a system workflow"
					},
					"response": []
				},
				{
					"name": "Create System Workflow Action for New Content Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "749eea74-9659-4446-ae07-1d178fd90223",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"actionId\":\"b9d89c80-3d88-4311-8365-187323c96436\",\n\t\"systemAction\":\"EDIT\",\n\t\"contentTypeVariable\":\"TestContentTypeSystemActions\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/system/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"system",
								"actions"
							]
						},
						"description": "Create for the new content type a new mapping for EDIT"
					},
					"response": []
				},
				{
					"name": "Get Content Type System Actions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f58a6e16-b77f-4aa5-a45c-0a87ac630a82",
								"exec": [
									"pm.test(\"No errors\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.length).to.eql(0);",
									"});",
									"",
									"pm.test(\"Return 2 items\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.length).to.eql(2);",
									"});",
									"",
									"pm.test(\"Has New System Action\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity[0].systemAction).to.eql(\"NEW\");",
									"});",
									"",
									"pm.test(\"New  has a Save Action\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity[0].workflowAction.id).to.eql(\"ceca71a0-deee-4999-bd47-b01baa1bcfc8\");",
									"});",
									"",
									"pm.test(\"Has Edit System Action\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity[1].systemAction).to.eql(\"EDIT\");",
									"});",
									"",
									"pm.test(\"New  has a Save/Publish Action\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity[1].workflowAction.id).to.eql(\"b9d89c80-3d88-4311-8365-187323c96436\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contenttypes/TestContentTypeSystemActions/system/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contenttypes",
								"TestContentTypeSystemActions",
								"system",
								"actions"
							]
						},
						"description": "Get the two content types"
					},
					"response": []
				},
				{
					"name": "Fires a default New Action",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "493f03e5-1e8b-4d24-8b3b-1a51bc0f5df0",
								"exec": [
									"pm.test(\"No errors\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.length).to.eql(0);",
									"});",
									"",
									"pm.test(\"Information Saved Correctly\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.baseType).to.eql(\"CONTENT\");",
									"    pm.expect(jsonData.entity.contentType).to.eql(\"TestContentTypeSystemActions\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"comments\":\"Adding New Content type\",\n\t\"contentlet\": {\n\t\t\"contentType\":\"TestContentTypeSystemActions\"\n\t\t\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/NEW",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"NEW"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fires a default EDIT Action",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d655d4cf-bd79-472c-b33c-1690b90168e6",
								"exec": [
									"pm.test(\"No errors\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.length).to.eql(0);",
									"});",
									"",
									"pm.test(\"Information Saved Correctly\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.baseType).to.eql(\"CONTENT\");",
									"    pm.expect(jsonData.entity.contentType).to.eql(\"TestContentTypeSystemActions\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"comments\":\"Adding New Content type\",\n\t\"contentlet\": {\n\t\t\"contentType\":\"TestContentTypeSystemActions\"\n\t\t\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/EDIT",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"EDIT"
							]
						},
						"description": "Fires an EDIT default action"
					},
					"response": []
				},
				{
					"name": "Fires a default PUBLISH Action ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "700fdf7d-8e9b-4db9-870b-37de9775433a",
								"exec": [
									"pm.test(\"No errors\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.length).to.eql(0);",
									"});",
									"",
									"pm.test(\"Information Publish Correctly\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.baseType).to.eql(\"CONTENT\");",
									"    pm.expect(jsonData.entity.contentType).to.eql(\"TestContentTypeSystemActions\");",
									"     pm.expect(jsonData.entity.live).to.eql(true);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"comments\":\"Adding New Content type\",\n\t\"contentlet\": {\n\t\t\"contentType\":\"TestContentTypeSystemActions\"\n\t\t\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							]
						},
						"description": "Fires an PUBLISH default action"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a6ec018c-4955-4b64-a32e-b8b54118c8a7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "35681317-768c-4f91-9c43-c021c2e76005",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "0d81e1d1-e290-417f-9aef-c24a83ca1906",
			"key": "serverURL",
			"value": "http://localhost:8080"
		},
		{
			"id": "50fb46fa-323f-413e-9164-2babc48c1f6d",
			"key": "temporalFileId",
			"value": "temp_322fde7815"
		},
		{
			"id": "0352d5e2-082c-41a2-9ff0-003d51c7cddb",
			"key": "inode",
			"value": "64f049aa-6bac-494c-a1da-db5de59209f5"
		}
	],
	"protocolProfileBehavior": {}
}